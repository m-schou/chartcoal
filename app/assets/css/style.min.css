/*!
 * fastshell
 * Fiercely quick and opinionated front-ends
 * https://HosseinKarami.github.io/fastshell
 * @author Hossein Karami
 * @version 1.0.5
 * Copyright 2018. MIT licensed.
 */
@charset "UTF-8";.clear:after,.clear:before{content:" ";display:table}.clear{*zoom:1}.clear:after{clear:both}*{box-sizing:border-box;font-smoothing:antialiased;text-rendering:optimizeLegibility}html{background:#f5f7fa}body{font:300 13px/1.6 Helvetica Neue,Helvetica,Arial;color:#444;transition:all .4s ease-in .3s}body,html{min-height:100vh}

/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block}audio:not([controls]){display:none;height:0}progress{vertical-align:baseline}[hidden],template{display:none}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}svg:not(:root){overflow:hidden}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}button,input,select,textarea{font:inherit;margin:0}optgroup{font-weight:700}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}.header{background:#fff;border-bottom:2px solid rgba(35,42,59,.06);margin-bottom:90px}.header .section{height:92px;max-width:1220px;-ms-flex-pack:justify;justify-content:space-between;margin:0 auto}.header .section,.header .section .nav ul{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.header .section .nav ul li{margin:0 0 0 30px}.logo{margin:0}.nav ul{display:-ms-flexbox;display:flex;-ms-flex-pack:end;justify-content:flex-end;list-style:none}.nav ul li{margin-left:10px}.main{max-width:1220px;margin:0 auto 100px}.main header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.main .grid-container{display:-ms-grid;display:grid;height:1020px;-ms-grid-columns:(1fr)[12]/(1fr)[12];grid-template-columns:repeat(12,1fr)/repeat(12,1fr);grid-auto-columns:1fr;grid-auto-rows:1fr;grid-gap:20px}.main .grid-container .card{border-radius:6px;padding:15px;box-shadow:0 5px 20px 0 rgba(0,0,0,.08)}.main .grid-container .card-nopadding{border-radius:6px;padding:0;box-shadow:0 5px 20px 0 rgba(0,0,0,.08)}.main .grid-container .card-theme-blue{background-image:linear-gradient(33deg,#4bb0ff,#497fff);color:#fff}.main .grid-container .card-theme-white{background:#fff;color:#37394c}.main .grid-container .card-theme-white .reports h1,.main .grid-container .card-theme-white .reports h3{color:#fff}.main .grid-container .card-intro{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between;position:relative}.main .grid-container .card-intro .background-overlay>div{background:linear-gradient(180deg,#fff,hsla(0,0%,100%,0));opacity:.2;width:150px;height:115px;transform:rotate(-10deg);position:absolute;z-index:0}.main .grid-container .card-intro .background-overlay>div:first-child{left:-20px;top:-30px}.main .grid-container .card-intro .background-overlay>div:nth-child(2){left:160px;top:-20px}.main .grid-container .card-intro .background-overlay>div:nth-child(3){left:338px;top:-15px;width:180px}.main .grid-container .card-intro .reports{padding:10px;margin:15px;height:110px;min-width:100px;border-radius:6px;background:#2d55b3;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;z-index:1}.main .grid-container .card-intro .reports h1,.main .grid-container .card-intro .reports h2,.main .grid-container .card-intro .reports h3{margin:0}.main .grid-container .card-intro .text{z-index:1;margin:6px 15px 15px}.main .grid-container .card-intro .text h2,.main .grid-container .card-intro .text h3{margin:0}.main .grid-container .card-intro .text h3{font-weight:400}.main .grid-container .card-block-chart{position:relative}.main .grid-container .card-block-chart .card-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;border-bottom:1px solid #f0f0f0}.main .grid-container .card-block-chart .card-header h2{margin:18px 24px;font-size:14px}.main .grid-container .card-block-chart .card-body{left:72px;bottom:72px;position:absolute;height:100%}.main .grid-container .card-block-chart .card-body ul{position:absolute;left:-86px;bottom:-20px;list-style-type:none}.main .grid-container .card-block-chart .card-body ul li{font-size:10px;font-weight:400;margin:21px 0;color:#99999990}.main .grid-container .card-block-chart .card-body ul li:nth-child(2n){color:#99999940}.main .grid-container .card-block-chart .card-body .date{display:-ms-flexbox;display:flex;position:absolute;left:-30px;bottom:-50px}.main .grid-container .card-block-chart .card-body .date li{font-size:10px;margin:0 4px;width:40px}.main .grid-container .card-block-chart .card-body .date li:nth-child(2n){color:#99999990}.main .grid-container .card-block-chart .card-body .card-chart-blocks-1{position:absolute;left:15px;bottom:0;width:20px;height:45%;background-color:#497fff;z-index:1}.main .grid-container .card-block-chart .card-body .card-chart-blocks-1:before{content:"";position:absolute;left:0;top:0;width:20px;height:10%;background-color:#baceff;z-index:3}.main .grid-container .card-block-chart .card-body .card-chart-blocks-1:after{content:"";position:absolute;left:0;top:0;width:20px;height:30%;background-color:#7ea2ff;z-index:2}.main .grid-container .card-block-chart .card-body .card-chart-blocks-2{position:absolute;left:65px;bottom:0;width:20px;height:50%;background-color:#497fff;z-index:1}.main .grid-container .card-block-chart .card-body .card-chart-blocks-2:before{content:"";position:absolute;left:0;top:0;width:20px;height:10%;background-color:#baceff;z-index:3}.main .grid-container .card-block-chart .card-body .card-chart-blocks-2:after{content:"";position:absolute;left:0;top:0;width:20px;height:30%;background-color:#7ea2ff;z-index:2}.main .grid-container .card-block-chart .card-body .card-chart-blocks-3{position:absolute;left:115px;bottom:0;width:20px;height:60%;background-color:#497fff;z-index:1}.main .grid-container .card-block-chart .card-body .card-chart-blocks-3:before{content:"";position:absolute;left:0;top:0;width:20px;height:10%;background-color:#baceff;z-index:3}.main .grid-container .card-block-chart .card-body .card-chart-blocks-3:after{content:"";position:absolute;left:0;top:0;width:20px;height:30%;background-color:#7ea2ff;z-index:2}.main .grid-container .card-block-chart .card-body .card-chart-blocks-4{position:absolute;left:165px;bottom:0;width:20px;height:55%;background-color:#497fff;z-index:1}.main .grid-container .card-block-chart .card-body .card-chart-blocks-4:before{content:"";position:absolute;left:0;top:0;width:20px;height:10%;background-color:#baceff;z-index:3}.main .grid-container .card-block-chart .card-body .card-chart-blocks-4:after{content:"";position:absolute;left:0;top:0;width:20px;height:30%;background-color:#7ea2ff;z-index:2}.main .grid-container .card-block-chart .card-body .grid-wrapper-vertical>div{z-index:0;position:absolute;left:0;bottom:0;border:1px solid #f0f0f0;height:320px;width:50px}.main .grid-container .card-block-chart .card-body .grid-wrapper-vertical>div:first-child{left:0}.main .grid-container .card-block-chart .card-body .grid-wrapper-vertical>div:nth-child(2){left:50px}.main .grid-container .card-block-chart .card-body .grid-wrapper-vertical>div:nth-child(3){left:100px}.main .grid-container .card-block-chart .card-body .grid-wrapper-vertical>div:nth-child(4){left:150px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div{z-index:0;position:absolute;left:0;bottom:0;border:1px solid #f0f0f0;height:40px;width:200px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:first-child{bottom:0}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(2){bottom:40px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(3){bottom:80px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(4){bottom:120px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(5){bottom:160px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(6){bottom:200px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(7){bottom:240px}.main .grid-container .card-block-chart .card-body .grid-wrapper-horisontal>div:nth-child(8){bottom:280px}.main .card-progress-loader{position:relative}.main .card-progress-loader .card-header{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.main .card-progress-loader a{position:absolute;left:12px;bottom:12px}.main .card-progress-loader .card-percent{font-size:24px;position:absolute;left:41%;top:41%}.main .card-progress-loader .card-circles-dashed{position:relative;width:100%}.main .card-progress-loader .card-circles-dashed div{width:80px;height:80px;border:1px dashed #fff3;border-radius:100%;position:absolute;left:0;top:0}.main .card-progress-loader .card-circles-dashed div:before{content:"";position:absolute;width:100px;height:100px;border:1px dashed #fff3;border-radius:100%}.main .card-progress-loader .card-circles-dashed div:after{content:"";position:absolute;width:120px;height:120px;border:1px dashed #fff3;border-radius:100%}.main .card-calender img{width:100%}.main .card-list{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-direction:column;flex-direction:column;font-family:Open Sans,sans-serif;font-size:14px;font-weight:600}.main .card-list .top-sales-list{width:100%}.main .card-list .top-sales-list .title{font-family:Montserrat,sans-serif;font-weight:600;margin-top:6px;color:#37394c}.main .card-list .top-sales-list ul{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;list-style-type:none;border-bottom:1px solid #f0f0f0;padding:12px 16px;margin:0}.main .card-list .top-sales-list ul:last-child{border-bottom:none}.main .card-list .top-sales-list ul li{margin-left:10px;color:#232a3b;font-weight:400;font-size:14px}.main .card-list .top-sales-list ul li:nth-child(2n){color:#909399;font-size:13px;margin-right:10px}.main .card-subscription{padding:16px 0 0 20px}.main .card-subscription h2{font-size:12px;margin:0}.main .card-subscription p{font-size:24px;font-weight:400;margin:0}.main .card-line-chart img,.main .card-pole-chart img{width:100%}.main .card-uploader{display:-ms-flexbox;display:flex;-ms-flex-pack:left;justify-content:left}.main .card-uploader .text{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;margin-left:24px}.main .card-uploader .text h3{margin:6px 0 0}.main .card-uploader .text p{margin:2px 0 0}.main .card-uploader .upload-arrow{display:-ms-flexbox;display:flex;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;border:1px dashed #b9bcc2;width:100px;margin:0 4px 0 10px}.main .card-video img{width:100%;height:60%}.main .card-video h2{font-size:12px;font-weight:700;margin:12px 20px 0}.main .card-video p{margin:0}.main .card-video .footer{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between;margin:2px 20px 0}.main .item1{overflow:scroll;grid-column:1/6;grid-row:1/3}.main .item2{overflow:scroll;max-width:100%;grid-column:6/9;grid-row:1/6}.main .item3{overflow:hidden;grid-column:9/13;grid-row:1/5}.main .item4{overflow:hidden;grid-column:1/3;grid-row:3/5}.main .item5{overflow:hidden;grid-column:3/6;grid-row:3/6}.main .item6{padding:0;grid-row:5/9}.main .item6,.main .item7{overflow:hidden;grid-column:1/3}.main .item7{grid-row:9/10}.main .item8{overflow:hidden;grid-column:3/9;grid-row:6/10}.main .item9{overflow:hidden;grid-column:9/13;grid-row:5/9}.main .item10{grid-column:3/9}.main .item10,.main .item11{overflow:hidden;grid-row:10/11}.main .item11{grid-column:1/3}.main .item12{overflow:hidden;grid-column:9/13;grid-row:9/11}button{text-align:center}button a{color:#fff;text-decoration:none}.logout{font-weight:700;background-image:linear-gradient(90deg,#4bb0ff,#497fff)}.logout,.open-reports{font-family:Montserrat,sans-serif;height:36px;text-transform:uppercase;padding:0 20px;border-radius:36px;font-size:11px}.open-reports{font-style:bold;background:none}.open-reports a{color:dimgrey}h1{font-size:40px}h1,h2{font-family:Montserrat,sans-serif;font-weight:500}h2{font-size:30px}h3{font-family:Open Sans,sans-serif;font-weight:600;font-size:13px;line-height:20px}::selection{background:#333;color:#fff;text-shadow:none}::-moz-selection{background:#333;color:#fff;text-shadow:none}::-webkit-selection{background:#333;color:#fff;text-shadow:none}@media print{*{background:transparent!important;color:#000!important;box-shadow:none!important;text-shadow:none!important}a,a:visited{text-decoration:underline}a[href]:after{content:" (" attr(href) ")"}abbr[title]:after{content:" (" attr(title) ")"}.ir a:after,a[href^="#"]:after,a[href^="javascript:"]:after{content:""}blockquote,pre{border:1px solid #999;page-break-inside:avoid}thead{display:table-header-group}img,tr{page-break-inside:avoid}img{max-width:100%!important}@page{margin:.5cm}h2,h3,p{orphans:3;widows:3}h2,h3{page-break-after:avoid}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
